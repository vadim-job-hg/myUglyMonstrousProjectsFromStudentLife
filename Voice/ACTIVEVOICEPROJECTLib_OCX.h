// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 34747 $
// File generated on 10.01.2015 18:47:49 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Windows\speech\XVoice.dll (1)
// LIBID: {EEE78583-FE22-11D0-8BEF-0060081841DE}
// LCID: 0
// Helpfile: 
// HelpString: Microsoft Direct Speech Synthesis
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\system32\stdole2.tlb)
// ************************************************************************ //
#ifndef   ACTIVEVOICEPROJECTLib_OCXH
#define   ACTIVEVOICEPROJECTLib_OCXH

#pragma option push -b -a4 -w-inl -w-8118

#include <olectrls.hpp>
#include <oleserver.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "ACTIVEVOICEPROJECTLib_TLB.h"
namespace Activevoiceprojectlib_tlb
{

// *********************************************************************//
// HelpString: Microsoft Direct Speech Synthesis
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDirectSS
// Help String      : Microsoft Direct Speech Synthesis Class
// Default Interface: IDirectSS
// Def. Intf. Object: TCOMIDirectSS
// Def. Intf. DISP? : No
// Event   Interface: _DirectSSEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
typedef void __fastcall (__closure * TDirectSSClickIn)(System::TObject * Sender, 
                                                       long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TDirectSSClickOut)(System::TObject * Sender, 
                                                        long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TDirectSSAudioStart)(System::TObject * Sender, 
                                                          long hi/*[in]*/, long lo/*[in]*/);
typedef void __fastcall (__closure * TDirectSSAudioStop)(System::TObject * Sender, 
                                                         long hi/*[in]*/, long lo/*[in]*/);
typedef void __fastcall (__closure * TDirectSSAttribChanged)(System::TObject * Sender, 
                                                             long which_attribute);
typedef void __fastcall (__closure * TDirectSSVisual)(System::TObject * Sender, 
                                                      long timehi, long timelo, short Phoneme, 
                                                      short EnginePhoneme, long hints, 
                                                      short MouthHeight, short bMouthWidth, 
                                                      short bMouthUpturn, short bJawOpen, 
                                                      short TeethUpperVisible, 
                                                      short TeethLowerVisible, short TonguePosn, 
                                                      short LipTension);
typedef void __fastcall (__closure * TDirectSSWordPosition)(System::TObject * Sender, 
                                                            long hi, long lo, long byteoffset);
typedef void __fastcall (__closure * TDirectSSBookMark)(System::TObject * Sender, 
                                                        long hi, long lo, long MarkNum);
typedef void __fastcall (__closure * TDirectSSTextDataStarted)(System::TObject * Sender, 
                                                               long hi, long lo);
typedef void __fastcall (__closure * TDirectSSTextDataDone)(System::TObject * Sender, 
                                                            long hi, long lo, long Flags);
typedef void __fastcall (__closure * TDirectSSActiveVoiceStartup)(System::TObject * Sender, 
                                                                  long init, long init2);
typedef void __fastcall (__closure * TDirectSSError)(System::TObject * Sender, 
                                                     unsigned_long warning, BSTR Details, 
                                                     BSTR Message);
typedef void __fastcall (__closure * TDirectSSwarning)(System::TObject * Sender, 
                                                       unsigned_long warning, BSTR Details, 
                                                       BSTR Message);
typedef void __fastcall (__closure * TDirectSSVisualFuture)(System::TObject * Sender, 
                                                            long milliseconds, long timehi, 
                                                            long timelo, short Phoneme, 
                                                            short EnginePhoneme, long hints, 
                                                            short MouthHeight, short bMouthWidth, 
                                                            short bMouthUpturn, short bJawOpen, 
                                                            short TeethUpperVisible, 
                                                            short TeethLowerVisible, 
                                                            short TonguePosn, short LipTension);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host Microsoft Direct Speech Synthesis Class in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TDirectSS : public TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TDirectSSClickIn               FOnClickIn;
  TDirectSSClickOut              FOnClickOut;
  TDirectSSAudioStart            FOnAudioStart;
  TDirectSSAudioStop             FOnAudioStop;
  TDirectSSAttribChanged         FOnAttribChanged;
  TDirectSSVisual                FOnVisual;
  TDirectSSWordPosition          FOnWordPosition;
  TDirectSSBookMark              FOnBookMark;
  TDirectSSTextDataStarted       FOnTextDataStarted;
  TDirectSSTextDataDone          FOnTextDataDone;
  TDirectSSActiveVoiceStartup    FOnActiveVoiceStartup;
  TNotifyEvent                   FOnDebugging;
  TDirectSSError                 FOnError;
  TDirectSSwarning               FOnwarning;
  TDirectSSVisualFuture          FOnVisualFuture;

  // Default Interace of OCX
  //
  TCOMIDirectSS m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //
  long            __fastcall get_Attributes(long Attrib);
  void            __fastcall set_Attributes(long Attrib, long pVal/*[in]*/);
  BSTR            __fastcall get_AttributeString(long Attrib);
  void            __fastcall set_AttributeString(long Attrib, BSTR pVal/*[in]*/);
  long            __fastcall get_AttributeMemory(long Attrib, long* size);
  void            __fastcall set_AttributeMemory(long Attrib, long* size, long pVal/*[in]*/);

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[15];
  static TControlData2 CControlData;
  static GUID          CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  TCOMIDirectSS __fastcall GetDefaultInterface();
  TCOMIDirectSS __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TDirectSS(TComponent* AOwner) : TOleControl(AOwner)
  {};
  virtual  __fastcall TDirectSS(HWND        Parent) : TOleControl(Parent)
  {};

  // OCX methods
  //
  void            __fastcall Speak(BSTR text);
  void            __fastcall Select(int index);
  BSTR            __fastcall EngineID(int index);
  BSTR            __fastcall ModeName(int index);
  BSTR            __fastcall MfgName(int index);
  BSTR            __fastcall ProductName(int index);
  BSTR            __fastcall ModeID(int index);
  BSTR            __fastcall Speaker(int index);
  BSTR            __fastcall Style(int index);
  long            __fastcall Gender(int index);
  long            __fastcall Age(int index);
  long            __fastcall Features(int index);
  long            __fastcall Interfaces(int index);
  long            __fastcall EngineFeatures(int index);
  long            __fastcall LanguageID(int index);
  BSTR            __fastcall Dialect(int index);
  void            __fastcall AudioPause(void);
  void            __fastcall AudioReset(void);
  void            __fastcall AudioResume(void);
  void            __fastcall Inject(BSTR value);
  BSTR            __fastcall Phonemes(long charset, long Flags, BSTR input);
  void            __fastcall PosnGet(long* hi, long* lo);
  void            __fastcall TextData(long characterset, long Flags, BSTR text);
  void            __fastcall InitAudioDestMM(long deviceid);
  void            __fastcall AboutDlg(long hWnd, BSTR title);
  void            __fastcall GeneralDlg(long hWnd, BSTR title);
  void            __fastcall LexiconDlg(long hWnd, BSTR title);
  void            __fastcall TranslateDlg(long hWnd, BSTR title);
  long            __fastcall FindEngine(BSTR EngineID, BSTR MfgName, BSTR ProductName, BSTR ModeID, 
                                        BSTR ModeName, long LanguageID, BSTR Dialect, BSTR Speaker, 
                                        BSTR Style, long Gender, long Age, long Features, 
                                        long Interfaces, long EngineFeatures, long RankEngineID, 
                                        long RankMfgName, long RankProductName, long RankModeID, 
                                        long RankModeName, long RankLanguage, long RankDialect, 
                                        long RankSpeaker, long RankStyle, long RankGender, 
                                        long RankAge, long RankFeatures, long RankInterfaces, 
                                        long RankEngineFeatures);
  void            __fastcall GetPronunciation(long charset, BSTR text, long Sense, BSTR* Pronounce, 
                                              long* PartOfSpeech, BSTR* EngineInfo);
  void            __fastcall InitAudioDestDirect(long direct);
  void            __fastcall InitAudioDestObject(long object);
  long            __fastcall Find(BSTR RankList);
  void            __fastcall LexAddTo(unsigned_long lex, long charset, BSTR text, BSTR Pronounce, 
                                      long PartOfSpeech, long EngineInfo, long engineinfosize);
  void            __fastcall LexGetFrom(long lex, long charset, BSTR text, long Sense, 
                                        BSTR* Pronounce, long* PartOfSpeech, long* EngineInfo, 
                                        long* sizeofengineinfo);
  void            __fastcall LexRemoveFrom(long lex, BSTR text, long Sense);
  void            __fastcall QueryLexicons(long f, long* pdw);
  void            __fastcall ChangeSpelling(long lex, BSTR stringa, BSTR stringb);

  // OCX properties
  //
  __property int CountEngines={ read=GetIntegerProp, index=18 };
  __property int MaxRealTime={ read=GetIntegerProp, index=33 };
  __property int hWnd={ read=GetIntegerProp, index=70 };
  __property int AudioDest={ read=GetIntegerProp, index=75 };
  __property long Attributes[long Attrib]={ read=get_Attributes, write=set_Attributes };
  __property BSTR AttributeString[long Attrib]={ read=get_AttributeString, write=set_AttributeString };
  __property long AttributeMemory[long Attrib][long* size]={ read=get_AttributeMemory, write=set_AttributeMemory };
  __property TCOMIDirectSS ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property Visible;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //
  __property short debug={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=1 };
  __property short Initialized={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=2 };
  __property int Pitch={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=7 };
  __property int MaxPitch={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=8 };
  __property int MinPitch={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=9 };
  __property int Speed={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=10 };
  __property int MaxSpeed={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=11 };
  __property int MinSpeed={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=12 };
  __property int VolumeRight={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=13 };
  __property int MinVolumeRight={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=14 };
  __property int MaxVolumeRight={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=15 };
  __property int RealTime={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=32 };
  __property int MinRealTime={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=34 };
  __property int Tagged={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=39 };
  __property short MouthHeight={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=49 };
  __property short MouthWidth={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=50 };
  __property short MouthUpturn={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=51 };
  __property short JawOpen={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=52 };
  __property short TeethUpperVisible={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=53 };
  __property short TeethLowerVisible={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=54 };
  __property short TonguePosn={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=55 };
  __property short LipTension={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=56 };
  __property short CallBacksEnabled={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=57 };
  __property short MouthEnabled={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=58 };
  __property int LastError={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=59 };
  __property short SuppressExceptions={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=60 };
  __property short Speaking={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=61 };
  __property int LastWordPosition={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=62 };
  __property short LipType={ read=GetSmallintProp, write=SetSmallintProp, stored=false, index=63 };
  __property System::WideString Sayit={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=66 };
  __property System::WideString FileName={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=68 };
  __property int CurrentMode={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=69 };
  __property int VolumeLeft={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=72 };
  __property int MinVolumeLeft={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=73 };
  __property int MaxVolumeLeft={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=74 };

  // OCX Events
  //
  __property TDirectSSClickIn OnClickIn={ read=FOnClickIn, write=FOnClickIn };
  __property TDirectSSClickOut OnClickOut={ read=FOnClickOut, write=FOnClickOut };
  __property TDirectSSAudioStart OnAudioStart={ read=FOnAudioStart, write=FOnAudioStart };
  __property TDirectSSAudioStop OnAudioStop={ read=FOnAudioStop, write=FOnAudioStop };
  __property TDirectSSAttribChanged OnAttribChanged={ read=FOnAttribChanged, write=FOnAttribChanged };
  __property TDirectSSVisual OnVisual={ read=FOnVisual, write=FOnVisual };
  __property TDirectSSWordPosition OnWordPosition={ read=FOnWordPosition, write=FOnWordPosition };
  __property TDirectSSBookMark OnBookMark={ read=FOnBookMark, write=FOnBookMark };
  __property TDirectSSTextDataStarted OnTextDataStarted={ read=FOnTextDataStarted, write=FOnTextDataStarted };
  __property TDirectSSTextDataDone OnTextDataDone={ read=FOnTextDataDone, write=FOnTextDataDone };
  __property TDirectSSActiveVoiceStartup OnActiveVoiceStartup={ read=FOnActiveVoiceStartup, write=FOnActiveVoiceStartup };
  __property TNotifyEvent OnDebugging={ read=FOnDebugging, write=FOnDebugging };
  __property TDirectSSError OnError={ read=FOnError, write=FOnError };
  __property TDirectSSwarning Onwarning={ read=FOnwarning, write=FOnwarning };
  __property TDirectSSVisualFuture OnVisualFuture={ read=FOnVisualFuture, write=FOnVisualFuture };
};
typedef TDirectSS  TDirectSSProxy;


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TVoiceProp
// Help String      : VoiceProp Class
// Default Interface: IUnknown
// Def. Intf. Object: IUnknownPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TVoiceProp : public Oleserver::TOleServer
{
  IUnknownPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TVoiceProp(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IUnknownPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IUnknownPtr intf);


};

};     // namespace Activevoiceprojectlib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Activevoiceprojectlib_tlb;
#endif

#pragma option pop

#endif // ACTIVEVOICEPROJECTLib_OCXH
